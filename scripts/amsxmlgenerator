#!/usr/bin/ruby

# generates XML files to be uploaded along with the packs they are in
# to import contents to the AMS platform

require 'rubygems'
require 'fastercsv'
require 'nokogiri'
require 'fileutils'
# require 'net'

# read files in all directories and write a XML file for every single
# content pack, after that upload the results to the AMS file server,
# probably using rsync, if possible.
# 
# After all files are uploaded create the file xmlname.go for every pack
# and sync the file structure again, this should start the import
# proccess.

# Real Sound
# 82 - Real Sound MP3
# 
# Videos
# 243 - Video7 176x144 - Video7 mp4 in 3gp 176x144
# 244 - Video7 128x96 - Video7 mp4 in 3gp 128x96
# 1720 - FLMV_mpeg4_aac_176x144.3gp
# 1721 - FLMV_mpeg4_aac_352x288.3gp
# 
# Images
# 1147 - color image MASTER 1200x1200 jpg
# 1148 - color image MASTER 1200x900 jpg
# 1149 - color image MASTER 900x1200 jpg
# 
# Games
# look in the handset-itemtypeid.csv
# 

supplier_id = 12345
external_id = 'imagecontentnamerandomnumber'
content_name = 'Content Name'
content_md5sum = '4dd19692830616f2e3ffad0095d6e4e9'
content_size = 391239

image_names = [0,1,2]
video_names = [0,1,2]
sound_names = [0,1,2]
jgame_names = [0,1,2]

AMS_CONTENT_DIR = "/Volumes/PublicoSP/remoteITcontents"r
FileUtils.cd(AMS_CONTENT_DIR, :verbose => true) {|root|
  root
}


# IMAGE EXAMPLE
ams_xml_content = Nokogiri::XML::Builder.new(:encoding => "UTF-8") do
  contentimport('xmlns' => "http://arvato-mobile.com/transfer", 'xmlns:xsi' => "http://www.w3.org/2001/XMLSchema-instance", 'xmlns:xsd' => "http://www.w3.org/2001/XMLSchema", 'xsi:schemaLocation' => "http://arvato-mobile.com/transfer http://images.handy.de/fundb/xsd/arvato_transfer_1_6_2.xsd", 'supplierid' => supplier_id, 'date' => "2010-10-08") {
    image_names.each do |image|
      article('articletypeid' => "8") {
        idbag {
          externalid "#{external_id}#{image}"
        }
        artist('role' => "Main") {
          name "No Artist"
        }
        title("#{content_name} #{image}", 'loc' => 'ww')
        licensor "FILL IN YOUR LICENSOR NAME HERE"
        keyword "My Keyword1"
        keyword "My Keyword2"
        contentgrading 0
        genre "My genre1"
        genre "My genre2"
        category "import" # fixed value
        attribute('key' => "VF_AssetID", 'value' => "Fill in Asset ID	X here")
        attribute('key' => "General Reporting Code", 'value' => "EA_000001_ww")
        territory {
          c "BR"
          dRelDate "2010-10-08+01:00"
          priceinfo {
            effectivedate "1970-01-01+01:00"
            pricecode "DEFAULT"
          }
        }
        item('itemtypeid' => "1147") {
          binary('contentname_color_image_MASTER_1200x1200.jpg', 'kind'=>"Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "1148") {
          binary('contentname_color_image_MASTER_1200x900.jpg', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "1149") {
          binary('contentname_color_image_MASTER_900x1200.jpg', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "1150") {
          binary('contentname_color_image_MASTER_675x1200.jpg', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
      }
    end
  }
end
puts ams_xml_content.to_xml

# VIDEO EXAMPLE
ams_xml_content = Nokogiri::XML::Builder.new(:encoding => "UTF-8") do
  contentimport('xmlns' => "http://arvato-mobile.com/transfer", 'xmlns:xsi' => "http://www.w3.org/2001/XMLSchema-instance", 'xmlns:xsd' => "http://www.w3.org/2001/XMLSchema", 'xsi:schemaLocation' => "http://arvato-mobile.com/transfer http://images.handy.de/fundb/xsd/arvato_transfer_1_6_2.xsd", 'supplierid' => supplier_id, 'date' => "2010-10-08") {
    video_names.each do |video|
      article('articletypeid' => "28") {
        idbag {
          externalid "#{external_id}#{video}"
        }
        artist('role' => "Main") {
          name "No Artist"
        }
        title("#{content_name} #{video}", 'loc' => 'ww')
        licensor "FILL IN YOUR LICENSOR NAME HERE"
        keyword "My Keyword1"
        keyword "My Keyword2"
        contentgrading 0
        genre "My genre1"
        genre "My genre2"
        category "import" # fixed value
        attribute('key' => "VF_AssetID", 'value' => "Fill in Asset ID	X here")
        attribute('key' => "General Reporting Code", 'value' => "EA_000001_ww")
        territory {
          c "BR"
          dRelDate "2010-10-08+01:00"
          priceinfo {
            effectivedate "1970-01-01+01:00"
            pricecode "DEFAULT"
          }
        }
        duration "271" # seconds
        articlebinary('video_coversource_600x600.jpg', 'type' => 'FLMV_cover600x600', 'md5sum' => '', 'filesize' => '')
        articlebinary('video_screencapture_640x480.jpg', 'type' => 'FLMV_screen capture source_640x480', 'md5sum' => '', 'filesize' => '')
        item('itemtypeid' => "1718") {
          binary('MisterMusicVideo_1234567891941_FLMV_h263_aac_176x144.3gp', 'kind'=>"Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "1719") {
          binary('MisterMusicVideo_1234567891942_FLMV_h263_aac_352x288.3gp', 'kind'=>"Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "1720") {
          binary('MisterMusicVideo_1234567891943_FLMV_mpeg4_aac_176x144.3gp', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "1721") {
          binary('MisterMusicVideo_1234567891944_FLMV mpeg4 aac 352x288.3gp', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "789") {
          binary('MisterMusicVideo_1234567891944_FLMV_MPEG_SOURCE.mpg', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        item('itemtypeid' => "501") {
          binary('MisterMusicVideo_1234567891944_FLMV_WMV_SOURCE.wmv', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
      }
    end
  }
end


# REAL SOUND EXAMPLE
ams_xml_content = Nokogiri::XML::Builder.new(:encoding => "UTF-8") do
  contentimport('xmlns' => "http://arvato-mobile.com/transfer", 'xmlns:xsi' => "http://www.w3.org/2001/XMLSchema-instance", 'xmlns:xsd' => "http://www.w3.org/2001/XMLSchema", 'xsi:schemaLocation' => "http://arvato-mobile.com/transfer http://images.handy.de/fundb/xsd/arvato_transfer_1_6_2.xsd", 'supplierid' => supplier_id, 'date' => "2010-10-08") {
    sound_names.each do |sound|
      article('articletypeid' => "13", 'xmlns' => "http://arvato-mobile.com/transfer") {
        idbag {
          externalid "#{external_id}#{sound}"
        }
        artist('role' => "Main") {
          name "No Artist"
        }
        title("#{content_name} #{sound}", 'loc' => 'ww')
        licensor "FILL IN YOUR LICENSOR NAME HERE"
        keyword "My Keyword1"
        keyword "My Keyword2"
        contentgrading 0
        genre "My genre1"
        genre "My genre2"
        category "import" # fixed value
        attribute('key' => "VF_AssetID", 'value' => "Fill in Asset ID	X here")
        attribute('key' => "General Reporting Code", 'value' => "EA_000001_ww")
        territory {
          c "BR"
          dRelDate "2010-10-08+01:00"
          priceinfo {
            effectivedate "1970-01-01+01:00"
            pricecode "DEFAULT"
          }
        }
        duration "271" # seconds
        articlebinary('EUEDD03120226_coversource800x800.jpg', 'type' => 'Real_music_coversource800x800', 'md5sum' => content_md5sum, 'filesize' => content_size)
        # Real Music Source WAV Master Cut 36
        item('itemtypeid' => "515") {
          binary('EUEDD03120226_36.wav', 'kind'=>"Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        # Real Music Source WAV Master Cut 20
        item('itemtypeid' => "516") {
          binary('EUEDD03120226_20.wav', 'kind'=>"Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        # Real Music Source WAV Master Cut 12
        item('itemtypeid' => "518") {
          binary('EUEDD03120226_12.wav', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        # Real Music Source WAV Master Cut 7
        item('itemtypeid' => "519") {
          binary('EUEDD03120226_7.wav', 'kind' => "Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
      }
    end
  }
end


# GAME EXAMPLE
ams_xml_content = Nokogiri::XML::Builder.new(:encoding => "UTF-8") do
  contentimport('xmlns' => "http://arvato-mobile.com/transfer", 'xmlns:xsi' => "http://www.w3.org/2001/XMLSchema-instance", 'xmlns:xsd' => "http://www.w3.org/2001/XMLSchema", 'xsi:schemaLocation' => "http://arvato-mobile.com/transfer http://images.handy.de/fundb/xsd/arvato_transfer_1_6_2.xsd", 'supplierid' => supplier_id, 'date' => "2010-10-08") {
    jgame_names.each do |jgame|
      article('articletypeid' => "13", 'xmlns' => "http://arvato-mobile.com/transfer") {
        idbag {
          externalid "#{external_id}#{jgame}"
        }
        artist('role' => "Main") {
          name "No Artist"
        }
        title("#{content_name} #{jgame}", 'loc' => 'ww')
        licensor "FILL IN YOUR LICENSOR NAME HERE"
        keyword "My Keyword1"
        keyword "My Keyword2"
        contentgrading 20 # from 0 to 60, incremented by 10
        genre "My genre1"
        genre "My genre2"
        category "import" # fixed value
        
        attribute('key' => "Type", 'value' => "game")
        attribute('key' => "General Reporting Code", 'value' => "EA_000001_ww")
        attribute('key'=>"CopyrightInfo", 'value'=>"(C) 2010, ABC-Games ltd.")
        
        localizedattribute('key'=>"JavaGameDescription", 'loc'=>"ww", 'value'=>"Please fill in your long game description here. You must not use more than 1000 chars.The warm season is hardly on the way and the Nice Wet Babes are outright going the full monty! They like it most being outside totally topless! Enjoy the view on a hot blonde, a sexy brunette and a sensual red-haired exposing their awesome tits to the sun! Get this erotic summer slideshow on your mobile and observe these lustful Nice Wet Babes when they loll around their hot body in the sunshine!")
        localizedattribute('key'=>"JavaGameDescriptionShort", 'loc'=>"ww", 'value'=>"Please fill in your short game description here. You must not use more than 255 chars.It's gonna be a hot summer! In this sexy slideshow the Nice Wet Babes enjoy the first sunbeams!")
        localizedattribute('key'=>"JavaGameDescriptionTagline", 'loc'=>"ww", 'value'=>"Please fill in your Tagline here. You must not use more than 80 chars. Hot boobs under the open sky!")
        
        territory {
          c "BR"
          dRelDate "2010-10-08+01:00"
          priceinfo {
            effectivedate "1970-01-01+01:00"
            pricecode "DEFAULT"
          }
        }
        # java games artible binary types
        # Examples for marketing material. For detailed info please review "marketing_descriptions_xxxxxxxx.xls"
        articlebinary('NiceWetBabes_animated_101x120.gif', 'type' => 'Game_Ingame-Trailer_101x120', 'md5sum' => content_md5sum, 'filesize' => content_size)
        articlebinary('NiceWetBabes_animated_240x320.gif', 'type' => 'Game_Ingame-Trailer_240x320', 'md5sum' => content_md5sum, 'filesize' => content_size)
        articlebinary('NiceWetBabes_01_240x320.gif', 'type' => 'Game_Ingame1_240x320', 'md5sum' => content_md5sum, 'filesize' => content_size)
        articlebinary('NiceWetBabes_02_240x320.gif', 'type' => 'Game_Ingame2_240x320', 'md5sum' => content_md5sum, 'filesize' => content_size)
        articlebinary('Game_Icon_85x85.png', 'type' => 'Game_Icon_85x85', 'md5sum' => content_md5sum, 'filesize' => content_size)
        
        # Java game Item type
        # references available files and handset-itemtypeid.csv
        item('itemtypeid' => "259") {
          binary('NiceWetBabes_phone_model_ww.jad', 'kind'=>"Binary", 'md5sum' => content_md5sum, 'filesize' => content_size)
        }
        
      }
    end
  }
end

