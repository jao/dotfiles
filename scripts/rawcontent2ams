#!/bin/bash

# this script takes the raw structure and generates the AMS structure
# followed by yet another script that will generate the necessary XML
# files, with the required information
# ruby script called: amsxmlgenerator

CONTENT_SOURCE_DIRECTORY="/Volumes/PublicoSP/remoteITcontents/raw_content"
CONTENT_TARGET_DIRECTORY="/Volumes/PublicoSP/remoteITcontents/ams"

DATETIME="201010080600"

_rename_files_properly () {
  cd $1
  for file in `ls`; do
    newfilename=`echo $file | tr "[[:upper:]]" "[[:lower:]]"`
    newfilename="${newfilename//[/}"
    newfilename="${newfilename//]/}"
    newfilename="${newfilename//(/}"
    newfilename="${newfilename//)/}"
    if [ "$file" != "$newfilename" ]; then
      mv -v $file $newfilename
    fi
  done
  cd -
}

cd $CONTENT_SOURCE_DIRECTORY
for mediatype in `ls`; do
  cd $mediatype
  for provider in `ls`; do
    cd $provider
    for content_pack in `ls`; do
      cd $content_pack
      case $provider in
        avioesdoforro|forrodomuido) provider_name="ezapsom"
        bella) provider_name="belladasemana";;
        cesarpolvilho) provider_name="eblasperez";;
        concursosereias) provider_name="sereias";;
        hsm) provider_name="disney";;
        fugu) provider_name="fugumobile";;
        smartcontents) provider_name="sensualclub"
        taito) provider_name="fatorx";;
        wtn) provider_name="mobbr";;
        *) provider_name="$provider";;
      esac
      case $mediatype in
        games)
          pack_name="${DATETIME}_${mediatype}_${provider_name}_${content_pack}_new"
          target_dir="${CONTENT_TARGET_DIRECTORY}/${pack_name}"
          [ ! -d $target_dir ] && mkdir -p $target_dir
          touch $target_dir/$pack_name.xml
          
          [ -f ICO_WAP.GIF ] && convert ICO_WAP.GIF -thumbnail $target_dir/_wap_preview.jpg
          [ -f ICO_WEB.GIF ] && convert ICO_WEB.GIF -thumbnail $target_dir/_web_preview.jpg
          cp -n *.JAD $target_dir/
          
          _rename_files_properly "${target_dir}"
        ;;
        images)
          pack_name="${DATETIME}_${mediatype}_${provider_name}_${content_pack}_new"
          target_dir="${CONTENT_TARGET_DIRECTORY}/${pack_name}"
          [ ! -d $target_dir ] && mkdir -p $target_dir
          touch $target_dir/$pack_name.xml
          
          cp -n *.JPG $target_dir/
          cp -n *.jpg $target_dir/
          
          _rename_files_properly "${target_dir}"
        ;;
        songs)
          pack_name="${DATETIME}_${mediatype}_${provider_name}_${content_pack}_new"
          target_dir="${CONTENT_TARGET_DIRECTORY}/${pack_name}"
          [ ! -d $target_dir ] && mkdir -p $target_dir
          touch $target_dir/$pack_name.xml
          
          [ -f ICO_WAP.GIF ] && convert ICO_WAP.GIF -thumbnail $target_dir/_wap_preview.jpg
          [ -f ICO_WEB.GIF ] && convert ICO_WEB.GIF -thumbnail $target_dir/_web_preview.jpg
          cp -n *.MP3 ${target_dir}/
          rm $target_dir/*_PREVIEW.MP3
          
          _rename_files_properly "${target_dir}"
        ;;
        videos)
          pack_name="${DATETIME}_${mediatype}_${provider_name}_${content_pack}_new"
          target_dir="${CONTENT_TARGET_DIRECTORY}/${pack_name}"
          [ ! -d $target_dir ] && mkdir -p $target_dir
          touch $target_dir/$pack_name.xml
          
          for preview in `ls *.GIF`; do
            if [ -f $preview ]; then
              target_preview=`echo $file | sed -E 's/ICO_WAP_/_wap_preview_/g' | sed -E 's/ICO_WEB_/_web_preview_/g' | tr "[[:upper:]]" "[[:lower:]]"`
              convert $preview -thumbnail $target_dir/$target_preview
            fi
          done
          
          cp -n *.3GP $target_dir/
          cp -n *.MP4 $target_dir/
          
          _rename_files_properly "${target_dir}"
        ;;
      esac
      cd ..
    done
    cd ..
  done
  cd ..
done

exit $?
