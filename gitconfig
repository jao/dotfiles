[user]
	name = joao paulo
  email = jpcamargo+github@gmail.com
	signingkey = 37679CDD
[diff]
  color = true
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[core]
  editor = subl -n -w
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore_global
[alias]
  s = status -s
  st = status
  f = fetch
  ci = commit
  ca = commit -a -m
  cam = commit -v --amend
  aa = add --all --intent-to-add
  ap = add --patch
  au = add -u
  b = branch
  bb = for-each-ref --sort=-committerdate refs/remotes/origin/ --format='%(committerdate) %(refname) %(authorname)'
  dedoduro = "!r() { if [ "$1" ]; then git bb | grep $1 | awk '{ print $7 \" \"  $8 \" \" $9 \" \" $10 };' | sort; else git bb | awk '{ print $8 \" \" $9 \" \" $10 };' | sort | uniq -c | sort -r; fi }; r"
  co = checkout
  d = diff --patch-with-stat
  df = diff
  dc = diff --cached
  l = log --pretty=oneline -n 20 --graph
  lg = log -p
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  ls = ls-files
  m = merge --ff-only
  rb = rebase -S
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase -i
  recent = "!r() { cur=$(git rev-parse --abbrev-ref HEAD); git for-each-ref --sort=-committerdate refs/heads/ --format='%(color:yellow)%(refname:short)|%(color:bold               green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | sed \"s/m${cur}|/m* ${cur}|/\" | column -ts'|'; }; r"
  originrecent = "!r() { cur=$(git rev-parse --abbrev-ref HEAD); git for-each-ref --sort=-committerdate refs/remotes/origin --format='%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | sed \"s/m${cur}|/m* ${cur}|/\" | column -ts'|'; }; r"
  rh = reset HEAD
  rhh = reset HEAD --hard
  touch = commit -m "" --allow-empty --allow-empty-message
  # Switch to a branch, creating it if necessary
  go = checkout -B
  wc = whatchanged -p --abbrev-commit --pretty=medium
	# Undo a `git push`
	undopush = push -f origin HEAD^:master
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" \"$REMOTE\"
[mergetool]
  prompt = false
[merge]
  tool = Kaleidoscope
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
  prompt = false
[diff]
  tool = Kaleidoscope
[help]
  autocorrect = 1
[blame]
  date = short
[grep]
  lineNumber = true
  patternType = extended
[fetch]
  prune = true
[branch]
  autosetupmerge = true
[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix
[push]
	default = simple
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
