#!/usr/bin/env bash

################################################################################
# Mac OS X stuff
# author: JP Camargo
################################################################################

# configurations
export EDITOR="subl -w"

export SUBL_EDITOR="subl -w"

export VIM_EDITOR="mvim -f --nomru -c \"au VimLeave * !open -a iTerm2\""

export GREP_OPTIONS="--color=auto"
export GREP_COLOR="1;33;40"

export CLICOLOR=1
# export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# android sdk
export ANDROID_HOME=/usr/local/opt/android-sdk

BREW_PREFIX=$(brew --prefix)

# go root
if [ -d $BREW_PREFIX ]; then
  export GOROOT=$BREW_PREFIX/Cellar/go/1.10.3/libexec
fi
export GOPATH=$HOME/go

# PATH
export PATH=/usr/local/bin:$PATH
export PATH=$PATH:/usr/local/sbin:/bin:/sbin:/usr/bin:/usr/sbin:~/bin:/usr/X11/bin
export PATH=$PATH:${DOTFILES_PATH}/scripts            # dotfiles scripts
export PATH=$PATH:${ANDROID_HOME}/tools               # android sdk
export PATH=$PATH:${GOROOT}/libexec/bin:${GOPATH}/bin # go lang
export PATH=$PATH:/usr/local/heroku/bin               # heroku

[ -d $BREW_PREFIX ] && export PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH

export PATH=`echo $PATH | tr ':' '\n' | uniq | tr '\n' ':'`

# Homebrew
# source $BREW_PREFIX/Library/Contributions/brew_bash_completion.sh

# load bash completion from brew
[ -f $BREW_PREFIX/etc/bash_completion ] && source $BREW_PREFIX/etc/bash_completion

# load ack completion
[ -f $DOTFILES_PATH/ack_completion ] && [[ " $(brew list) " =~ " ack " ]] && source $DOTFILES_PATH/ack_completion

# google cloud
google_cloud_path=$BREW_PREFIX/Caskroom/google-cloud-sdk/latest/google-cloud-sdk
[ -f $google_cloud_path/path.bash.inc ] && source $google_cloud_path/path.bash.inc
[ -f $google_cloud_path/completion.bash.inc ] && source $google_cloud_path/completion.bash.inc

# bash completion files
if [ -d ${BREW_PREFIX}/etc/bash_completion.d ]; then
  for file in `\ls ${BREW_PREFIX}/etc/bash_completion.d`; do
    [ -e "${BREW_PREFIX}/etc/bash_completion.d/${file}" ] && source "${BREW_PREFIX}/etc/bash_completion.d/${file}";
  done
fi

################################################################################
# Aliases
################################################################################

# editor related shortcuts
alias ls="ls --color"

alias v="mvim"

alias vim="vim -u ~/.vim/vimrc"
alias mvim="mvim -u ~/.vim/vimrc"

# lock and screen
alias lock='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'
alias screensaver='open -a /System/Library/Frameworks/ScreenSaver.framework//Versions/A/Resources/ScreenSaverEngine.app'

# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.Finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.Finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 10'"
alias hax="growlnotify -a 'Activity Monitor' 'System error' -m 'WTF R U DOIN'"

# Empty the Trash on all mounted volumes and the main HDD
# Also, clear Appleâ€™s System Logs to improve shell startup speed
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl"

################################################################################
# Functions
################################################################################

# open man page in Preview
man2pdf () { man -t $* | open -f -a Preview; }

# mac downloads log
show_downloads() {
  sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'select LSQuarantineDataURLString from LSQuarantineEvent'
}

clear_downloads() {
  sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'
}

# iso to img using hdiutil
iso2img () {
  if [ "$1" != "" ] && [ "$2" != "" ]; then
    hdiutil convert -format UDRW -o $2 $1;
  else
    echo "Missing arguments, usage:
  iso2img <image_file> <output_file>"
  fi
}

_battery_status () {
  local response=$(pmset -g batt)
}

_archey () {
  archey --color --offline
}
_archey
